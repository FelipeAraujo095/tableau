<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='VENDASPORCIDADE' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Exemplo-Superloja (2)' inline='true' name='federated.169voiw1bvm1x31cv6qd502lujir' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Exemplo-Superloja' name='excel-direct.1un62qh0pd2xlb1ag3igy13n5qay'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/PMZ-TI/Desktop/TABLEAU/CURSO/Exemplo-Superloja.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
      </connection>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='Exemplo-Superloja' inline='true' name='federated.1v2mpba132weha1buopl81yo8vw8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Exemplo-Superloja' name='excel-direct.1k78k6w10vt3ou118kj5g1dtojw3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/PMZ-TI/Desktop/TABLEAU/CURSO/Exemplo-Superloja.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1k78k6w10vt3ou118kj5g1dtojw3' name='Compras' table='[Compras$]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='ID da fila' ordinal='0' />
            <column datatype='string' name='ID da compra' ordinal='1' />
            <column datatype='date' name='Data da compra' ordinal='2' />
            <column datatype='date' name='Data de envio' ordinal='3' />
            <column datatype='string' name='Modo de envio' ordinal='4' />
            <column datatype='string' name='ID do cliente' ordinal='5' />
            <column datatype='string' name='Nome do cliente' ordinal='6' />
            <column datatype='string' name='Segmento' ordinal='7' />
            <column datatype='string' name='Cidade' ordinal='8' />
            <column datatype='string' name='Estado' ordinal='9' />
            <column datatype='string' name='Região Brasileira' ordinal='10' />
            <column datatype='string' name='País' ordinal='11' />
            <column datatype='string' name='Região' ordinal='12' />
            <column datatype='string' name='ID do produto' ordinal='13' />
            <column datatype='string' name='Categoria' ordinal='14' />
            <column datatype='string' name='Sub-categoria' ordinal='15' />
            <column datatype='string' name='Nome do produto' ordinal='16' />
            <column datatype='real' name='Vendas' ordinal='17' />
            <column datatype='integer' name='Quantidade' ordinal='18' />
            <column datatype='real' name='Desconto' ordinal='19' />
            <column datatype='real' name='Lucro' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1k78k6w10vt3ou118kj5g1dtojw3' name='Compras' table='[Compras$]' type='table'>
          <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='ID da fila' ordinal='0' />
            <column datatype='string' name='ID da compra' ordinal='1' />
            <column datatype='date' name='Data da compra' ordinal='2' />
            <column datatype='date' name='Data de envio' ordinal='3' />
            <column datatype='string' name='Modo de envio' ordinal='4' />
            <column datatype='string' name='ID do cliente' ordinal='5' />
            <column datatype='string' name='Nome do cliente' ordinal='6' />
            <column datatype='string' name='Segmento' ordinal='7' />
            <column datatype='string' name='Cidade' ordinal='8' />
            <column datatype='string' name='Estado' ordinal='9' />
            <column datatype='string' name='Região Brasileira' ordinal='10' />
            <column datatype='string' name='País' ordinal='11' />
            <column datatype='string' name='Região' ordinal='12' />
            <column datatype='string' name='ID do produto' ordinal='13' />
            <column datatype='string' name='Categoria' ordinal='14' />
            <column datatype='string' name='Sub-categoria' ordinal='15' />
            <column datatype='string' name='Nome do produto' ordinal='16' />
            <column datatype='real' name='Vendas' ordinal='17' />
            <column datatype='integer' name='Quantidade' ordinal='18' />
            <column datatype='real' name='Desconto' ordinal='19' />
            <column datatype='real' name='Lucro' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Compras]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10001:no:A1:U10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID da fila</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID da fila]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>ID da fila</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID da compra</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ID da compra]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>ID da compra</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data da compra</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data da compra]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Data da compra</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data de envio</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data de envio]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Data de envio</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Modo de envio</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Modo de envio]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Modo de envio</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID do cliente</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ID do cliente]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>ID do cliente</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome do cliente</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Nome do cliente]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Nome do cliente</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segmento</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segmento]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Segmento</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cidade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cidade]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Cidade</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estado</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estado]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Estado</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Região Brasileira</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Região Brasileira]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Região Brasileira</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>País</remote-name>
            <remote-type>130</remote-type>
            <local-name>[País]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>País</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Região</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Região]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Região</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID do produto</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ID do produto]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>ID do produto</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categoria</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categoria]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Categoria</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-categoria</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-categoria]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Sub-categoria</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome do produto</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Nome do produto]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Nome do produto</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vendas]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Vendas</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantidade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantidade]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Quantidade</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Desconto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Desconto]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Desconto</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lucro</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lucro]</local-name>
            <parent-name>[Compras]</parent-name>
            <remote-alias>Lucro</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[ctd:ID da compra:qk]&quot;' value='#PEDIDOS' />
          <alias key='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[ctd:ID do cliente:qk]&quot;' value='#CLIENTES' />
          <alias key='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]&quot;' value='LUCRO' />
          <alias key='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Quantidade:qk]&quot;' value='QUANTIDADE' />
          <alias key='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]&quot;' value='VENDAS' />
          <alias key='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_512284488710615044:qk]&quot;' value='TICKET MÉDIO' />
        </aliases>
      </column>
      <column caption='% DE LUCRO' datatype='real' default-format='p0.00%' name='[Calculation_16325579727695872]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Lucro]) / SUM([Vendas])' />
      </column>
      <column datatype='string' name='[Cidade]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[ID da compra]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[ID da fila]' role='dimension' type='ordinal' />
      <column datatype='string' name='[ID do cliente]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Lucro]' role='measure' type='quantitative' />
      <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Quantidade]' role='measure' type='quantitative' />
      <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Vendas]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Compras' datatype='table' name='[__tableau_internal_object_id__].[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]' role='measure' type='quantitative' />
      <column-instance column='[ID da compra]' derivation='CountD' name='[ctd:ID da compra:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ID do cliente]' derivation='CountD' name='[ctd:ID do cliente:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cidade]' derivation='None' name='[none:Cidade:nk]' pivot='key' type='nominal' />
      <column-instance column='[Lucro]' derivation='Sum' name='[sum:Lucro:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantidade]' derivation='Sum' name='[sum:Quantidade:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
      <group caption='Dica de ferramenta (Estado,País)' hidden='true' name='[Tooltip (Estado,País)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Estado]' />
          <groupfilter function='level-members' level='[País]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Estado, Cidade'>
          <field>[País]</field>
          <field>[Estado]</field>
          <field>[Cidade]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='pt_BR' class='hyper' dbname='C:/Users/PMZ-TI/Documents/Meu Repositório do Tableau/Fontes de dados/Exemplo-Superloja.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='05/05/2022 02:33:26 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Exemplo-Superloja' increment-value='%null%' refresh-type='create' rows-inserted='2171' timestamp-start='2022-05-05 14:33:24.134' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ID da fila</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ID da fila]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID da fila</remote-alias>
              <ordinal>0</ordinal>
              <family>Compras</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2171</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID da compra</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ID da compra]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID da compra</remote-alias>
              <ordinal>1</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>931</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Data da compra</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Data da compra]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Data da compra</remote-alias>
              <ordinal>2</ordinal>
              <family>Compras</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Data de envio</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Data de envio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Data de envio</remote-alias>
              <ordinal>3</ordinal>
              <family>Compras</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>315</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Modo de envio</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Modo de envio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Modo de envio</remote-alias>
              <ordinal>4</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID do cliente</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ID do cliente]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID do cliente</remote-alias>
              <ordinal>5</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>537</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Nome do cliente</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Nome do cliente]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Nome do cliente</remote-alias>
              <ordinal>6</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>506</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segmento</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segmento]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segmento</remote-alias>
              <ordinal>7</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cidade</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Cidade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cidade</remote-alias>
              <ordinal>8</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Estado</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Estado]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Estado</remote-alias>
              <ordinal>9</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>148</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Região Brasileira</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Região Brasileira]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Região Brasileira</remote-alias>
              <ordinal>10</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>País</remote-name>
              <remote-type>129</remote-type>
              <local-name>[País]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>País</remote-alias>
              <ordinal>11</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Região</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Região]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Região</remote-alias>
              <ordinal>12</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID do produto</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ID do produto]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID do produto</remote-alias>
              <ordinal>13</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1076</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Categoria</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Categoria]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Categoria</remote-alias>
              <ordinal>14</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-categoria</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-categoria]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-categoria</remote-alias>
              <ordinal>15</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Nome do produto</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Nome do produto]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Nome do produto</remote-alias>
              <ordinal>16</ordinal>
              <family>Compras</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1027</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LPT_RBR_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vendas</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Vendas]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vendas</remote-alias>
              <ordinal>17</ordinal>
              <family>Compras</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1498</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantidade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantidade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantidade</remote-alias>
              <ordinal>18</ordinal>
              <family>Compras</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Desconto</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Desconto]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Desconto</remote-alias>
              <ordinal>19</ordinal>
              <family>Compras</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lucro</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lucro]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lucro</remote-alias>
              <ordinal>20</ordinal>
              <family>Compras</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1362</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Compras_AB975DDAE3774D9C8FA906C6D61DD1A9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[yr:Data da compra:ok]'>
          <groupfilter function='member' level='[yr:Data da compra:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Cidade:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Barranquilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ciudad del Carmen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Contramaestre&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huixquilucan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manizales&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puerto Montt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Fernando del Valle de Catamarca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santo Domingo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tegucigalpa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Villavicencio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abreu e Lima&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aracati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bagé&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bahía Blanca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belo Horizonte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brasília&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Calama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Camocim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Catanduva&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cidade do Panamá&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cotia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Divinópolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Francisco Beltrão&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gómez Palacio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guarapari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guaymas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ilhéus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Itapeva&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jequié&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lençóis Paulista&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Mochis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manaus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mendoza&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nova Serrana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parintins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petapa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pindamonhangaba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poza Rica de Hidalgo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Presidente Prudente&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rancagua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Luis Río Colorado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;São Bernardo do Campo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senhor do Bonfim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Surubim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uberlândia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vitória&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Americana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arapongas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barra Mansa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Birigui&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bogotá&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cabo Frio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canoas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cidade Ocidental&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cienfuegos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Concepción del Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cruzeiro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eunápolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Facatativá&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaspar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guarulhos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holguín&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Irapuato&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Itaituba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ituiutaba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;José Bonifácio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malambo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milpa Alta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mogi das Cruzes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neiva&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Osasco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patrocínio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ponte Nova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resende&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resistencia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Bernardo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Pablo de las Salinas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santiago de Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;São Luís&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Silao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sinop&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tartagal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Teresina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trujillo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valinhos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Villa Alemana&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Altamira&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Arapiraca&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Barra do Piraí&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Bezerros&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cabo de Santo Agostinho&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Campo Limpo Paulista&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Chapecó&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cruz das Almas&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Erechim&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Garanhuns&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Guarujá&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Ipatinga&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Itu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Joinville&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Linhares&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mococa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Oriximiná&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Pato Branco&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Poços de Caldas&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Registro&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Santa Helena&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;São Leopoldo&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Simões Filho&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Taubaté&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Vacaria&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Votuporanga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armênia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chillán&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ciudad Madero&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dos Quebradas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Juliaca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nueva Gerona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pasto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Punta Arenas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San José de las Lajas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Catarina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bridgetown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chetumal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ciudad Delicias&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Copiapó&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delgado&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Floridablanca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ibagué&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Les Abymes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manzanillo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pitalito&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puerto Padre&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Río Bravo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Francisco de Macorís&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Salvador de Jujuy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sogamoso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tehuacán&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Viña del Mar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cipolletti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Culiacán&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guacara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Huancayo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Piedras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neuquén&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palmira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pinar del Rio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Progreso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reynosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Cristóbal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Pedro de Macorís&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santiago de los Caballeros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tulancingo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Villa Canales&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Apucarana&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Arcoverde&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Barueri&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Bom Jesus da Lapa&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Camaragibe&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Castanhal&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Contagem&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Curitiba&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Fortaleza&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Gravataí&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Igarassu&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Itapecuru Mirim&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Jataí&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Jurema&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Maceió&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Navegantes&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Paracatu&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Petrópolis&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Praia Grande&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Rolândia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Santos&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;São Vicente&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sousa&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Tupã&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Vespasiano&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ayacucho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cajamarca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cartagena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cholula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ensenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Girón&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mejicanos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morón&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Potosí&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Quito&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Luis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tlalnepantla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zihuatanejo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acámbaro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bajos de Haina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colón&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cúcuta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Escuintla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gonaïves&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ipiales&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamundí&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Patios&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mérida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paita&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Martín&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Talcahuano&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toluca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anápolis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Apopa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Araraquara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atlixco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barreirinhas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boa Esperança&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cajazeiras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carapicuíba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cárdenas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chincha Alta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cubatão&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Feira de Santana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grajaú&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ibirité&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ilo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Itamaraju&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ixtapaluca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacareí&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Juiz de Fora&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Ceiba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lo Prado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montevidéu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mossoró&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orizaba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palhoça&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paysandú&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pelotas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Porto Alegre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portoviejo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Quibdó&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Branco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salamanca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Justo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santarém&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;São Paulo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sorocaba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spanish Town&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tianguá&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tijuana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valledupar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Várzea Grande&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Altotonga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Celaya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ciudad Acuña&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Consolación del Sur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Huaraz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jiutepec&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Las Tunas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mixco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicolás Romero&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Cristóbal de Las Casas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Pedro Sula&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santiago del Estero&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Villa Nueva&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apartadó&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aracaju&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ariquemes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arraiján&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bayamo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bayeux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bragança Paulista&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambé&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caracas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Catalão&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chimaltenango&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ciudad Obregón&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cosmópolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Diadema&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Franca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guanambi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iguala de la Independencia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ijuí&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Itapetininga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaú&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lajeado&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Linares&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manacapuru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matanzas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montería&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niterói&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ocaña&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paranaguá&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pilar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Presidente Dutra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Querétaro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rondonópolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;São Benedito&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sapucaia do Sul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumaré&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uberaba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vilhena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apatzingán de la Constitución&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Artemisa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabimas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chimbote&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ciudad Valles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duitama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Junín&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Matehuala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monterrey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ocotlán&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portmore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Quetzaltenango&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rosário&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Juan de la Maguana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Cruz de Barahona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Teziutlán&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yacuiba&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Avellaneda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carrefour&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Choloma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coatzacoalcos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Progreso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;General Escobedo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guasave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ilopango&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Izúcar de Matamoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;La Chorrera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Medellín&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morelia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oruro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Posadas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Quilmes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salina Cruz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fé&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tinaquillo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valparaíso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zapopan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cartago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cidade do México&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuautitlán&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Envigado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guayaquil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Pintana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Los Ángeles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melchor Ocampo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mosquera&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Osorno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pereira&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saltillo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Potosí&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Marta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tlaquepaque&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Águas Lindas de Goiás&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Araguaína&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barbacena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Betim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buriticupu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Campo Grande&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caxias do Sul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chiclayo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ciudad Guzmán&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Criciúma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duque de Caxias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Franco da Rocha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guanare&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guaratinguetá&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indaiatuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Itaúna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;João Pessoa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Limoeiro do Norte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mar del Plata&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauá&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Novo Gama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Passos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pirapora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Piura&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puerto Vallarta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Recife&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Francisco del Rincón&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sancti Spíritus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Cruz do Sul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;São José dos Campos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Soledad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tatuí&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Temixco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguaiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vitória de Santo Antão&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Ananindeua&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Araranguá&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Barreiras&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Blumenau&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Caçador&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Caraguatatuba&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Coari&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Cruzeiro do Sul&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Farroupilha&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Goiânia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gurupi&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Itajaí&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Jaboticabal&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Juazeiro&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Londrina&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Montes Claros&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Paço do Lumiar&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Paulista&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pontes e Lacerda&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Ribeirão Preto&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Santana de Parnaíba&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;São Miguel dos Campos&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sobral&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Teresópolis&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Valparaíso de Goiás&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amatitlán&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barranca&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chaguanas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ciudad Choluteca&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuscatancingo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florencia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guamúchil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huehuetenango&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lázaro Cárdenas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraná&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puente Alto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riberalta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Rafael&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soacha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tecomán&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuxtla Gutiérrez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Villahermosa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Acayucan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Açu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Araçatuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Balneário Camboriú&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bento Gonçalves&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brumado&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Campina Grande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caucaia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ciego de Ávila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comodoro Rivadavia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crato&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuenca&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dourados&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Esquina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Francisco Morato&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guarapuava&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hermosillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indaial&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iquique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Itapevi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ji-Paraná&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Limeira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maringá&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Metepec&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Novo Cruzeiro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Passo Fundo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Piedecuesta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pinheiro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Presidencia Roque Sáenz Peña&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quixadá&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Andrés Tuxtla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Miguelito&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Gonçalo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seropédica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taboão da Serra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Torreón&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Umuarama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vitória da Conquista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Apodaca&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Assunção&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bello&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinautla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ciudad Victoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maturín&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quevedo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sabanalarga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Juan del Río&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Cruz de la Sierra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Soyapango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valle Hermoso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yopal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bucaramanga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cancún&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ciudad Juárez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guantânamo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maracaibo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monclova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Novo Laredo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San José de Guanipa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sonsonate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tepic&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Andradina&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Araucária&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Barretos&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Boa Vista&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Camaçari&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Cassilândia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Conselheiro Lafaiete&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Cuiabá&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Floriano&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Gravatá&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Ibiúna&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Itapecerica da Serra&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Jacobina&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Jundiaí&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Macapá&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Natal&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Palmares&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Penedo&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Pouso Alegre&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Santo André&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;São Pedro da Aldeia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sorriso&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Vassouras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baní&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camagüey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ciénaga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Concepción de La Vega&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuernavaca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heroica Zitácuaro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iquitos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lagos de Moreno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexicali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Necochea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palma Soriano&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Piedras Negras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Nicolás de los Arroyos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tapachula&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Compras' id='Compras_AB975DDAE3774D9C8FA906C6D61DD1A9'>
            <properties context=''>
              <relation connection='excel-direct.1k78k6w10vt3ou118kj5g1dtojw3' name='Compras' table='[Compras$]' type='table'>
                <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='ID da fila' ordinal='0' />
                  <column datatype='string' name='ID da compra' ordinal='1' />
                  <column datatype='date' name='Data da compra' ordinal='2' />
                  <column datatype='date' name='Data de envio' ordinal='3' />
                  <column datatype='string' name='Modo de envio' ordinal='4' />
                  <column datatype='string' name='ID do cliente' ordinal='5' />
                  <column datatype='string' name='Nome do cliente' ordinal='6' />
                  <column datatype='string' name='Segmento' ordinal='7' />
                  <column datatype='string' name='Cidade' ordinal='8' />
                  <column datatype='string' name='Estado' ordinal='9' />
                  <column datatype='string' name='Região Brasileira' ordinal='10' />
                  <column datatype='string' name='País' ordinal='11' />
                  <column datatype='string' name='Região' ordinal='12' />
                  <column datatype='string' name='ID do produto' ordinal='13' />
                  <column datatype='string' name='Categoria' ordinal='14' />
                  <column datatype='string' name='Sub-categoria' ordinal='15' />
                  <column datatype='string' name='Nome do produto' ordinal='16' />
                  <column datatype='real' name='Vendas' ordinal='17' />
                  <column datatype='integer' name='Quantidade' ordinal='18' />
                  <column datatype='real' name='Desconto' ordinal='19' />
                  <column datatype='real' name='Lucro' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1v2mpba132weha1buopl81yo8vw8'>
      <datasources>
        <datasource caption='Exemplo-Superloja' name='federated.1v2mpba132weha1buopl81yo8vw8' />
      </datasources>
      <datasource-dependencies datasource='federated.1v2mpba132weha1buopl81yo8vw8'>
        <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
        <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]'>
        <groupfilter function='level-members' level='[yr:Data da compra:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Planilha 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Exemplo-Superloja' name='federated.1v2mpba132weha1buopl81yo8vw8' />
          </datasources>
          <datasource-dependencies datasource='federated.1v2mpba132weha1buopl81yo8vw8'>
            <column caption='% DE LUCRO' datatype='real' default-format='p0.00%' name='[Calculation_16325579727695872]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Lucro]) / SUM([Vendas])' />
            </column>
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[País]' derivation='None' name='[none:País:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lucro]' derivation='Sum' name='[sum:Lucro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_16325579727695872]' derivation='User' name='[usr:Calculation_16325579727695872:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]'>
            <groupfilter function='member' level='[none:País:nk]' member='&quot;Brasil&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v2mpba132weha1buopl81yo8vw8].[none:Estado:nk]</rows>
        <cols>[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E567D55C-5FFB-4AA6-9E35-9D9D5E290790}' />
    </worksheet>
    <worksheet name='RESUMO'>
      <table>
        <view>
          <datasources>
            <datasource caption='Exemplo-Superloja' name='federated.1v2mpba132weha1buopl81yo8vw8' />
          </datasources>
          <datasource-dependencies datasource='federated.1v2mpba132weha1buopl81yo8vw8'>
            <column caption='SUM([Vendas]) / COUNTD([ID da compra])' datatype='real' name='[Calculation_512284488710615044]' role='measure' type='quantitative' user:unnamed='RESUMO'>
              <calculation class='tableau' formula='SUM([Vendas]) / COUNTD([ID da compra])' />
            </column>
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ID da compra]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[ID da fila]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ID do cliente]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Quantidade]' role='measure' type='quantitative' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[ID da compra]' derivation='CountD' name='[ctd:ID da compra:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ID da fila]' derivation='CountD' name='[ctd:ID da fila:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ID do cliente]' derivation='CountD' name='[ctd:ID do cliente:qk]' pivot='key' type='quantitative' />
            <column-instance column='[País]' derivation='None' name='[none:País:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lucro]' derivation='Sum' name='[sum:Lucro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantidade]' derivation='Sum' name='[sum:Quantidade:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_512284488710615044]' derivation='User' name='[usr:Calculation_512284488710615044:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Quantidade:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[ctd:ID do cliente:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[ctd:ID da compra:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_512284488710615044:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Quantidade:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[ctd:ID do cliente:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2mpba132weha1buopl81yo8vw8].[ctd:ID da fila:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]'>
            <groupfilter function='member' level='[none:País:nk]' member='&quot;Brasil&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]' value='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' />
            <format attr='text-format' field='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_512284488710615044:qk]' value='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{43799E75-B254-4ACA-B751-1A99AE97C75D}' />
    </worksheet>
    <worksheet name='RESUMO REGIÕES BRASILEIRAS'>
      <table>
        <view>
          <datasources>
            <datasource caption='Exemplo-Superloja' name='federated.1v2mpba132weha1buopl81yo8vw8' />
          </datasources>
          <datasource-dependencies datasource='federated.1v2mpba132weha1buopl81yo8vw8'>
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Região Brasileira]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[País]' derivation='None' name='[none:País:nk]' pivot='key' type='nominal' />
            <column-instance column='[Região Brasileira]' derivation='None' name='[none:Região Brasileira:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lucro]' derivation='Sum' name='[sum:Lucro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]'>
            <groupfilter function='member' level='[none:País:nk]' member='&quot;Brasil&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1v2mpba132weha1buopl81yo8vw8].[none:Região Brasileira:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:Região Brasileira:nk]' />
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]' />
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1v2mpba132weha1buopl81yo8vw8].[none:Região Brasileira:nk]>
]]></run>
                <run bold='true'><![CDATA[<[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]>]]></run>
                <run><![CDATA[
<[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v2mpba132weha1buopl81yo8vw8].[none:Região Brasileira:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{40E607FD-4449-478D-B06F-725F7BAB371C}' />
    </worksheet>
    <worksheet name='VENDAS POR CIDADE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Exemplo-Superloja' name='federated.1v2mpba132weha1buopl81yo8vw8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1v2mpba132weha1buopl81yo8vw8'>
            <column caption='% DE LUCRO' datatype='real' default-format='p0.00%' name='[Calculation_16325579727695872]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Lucro]) / SUM([Vendas])' />
            </column>
            <column datatype='string' name='[Cidade]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Cidade]' derivation='None' name='[none:Cidade:nk]' pivot='key' type='nominal' />
            <column-instance column='[País]' derivation='None' name='[none:País:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_16325579727695872]' derivation='User' name='[usr:Calculation_16325579727695872:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[Tooltip (Estado,País)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - VENDAS POR CIDADE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Estado]' />
              <groupfilter function='level-members' level='[País]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]'>
            <groupfilter function='level-members' level='[none:País:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1v2mpba132weha1buopl81yo8vw8].[none:Cidade:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[Tooltip (Estado,País)]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v2mpba132weha1buopl81yo8vw8].[none:Cidade:nk]</rows>
        <cols>[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]</cols>
      </table>
      <simple-id uuid='{2CAB6588-818D-48D1-AE28-8BAD5022EC80}' />
    </worksheet>
    <worksheet name='VENDAS POR ESTADO'>
      <table>
        <view>
          <datasources>
            <datasource caption='Exemplo-Superloja' name='federated.1v2mpba132weha1buopl81yo8vw8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1v2mpba132weha1buopl81yo8vw8'>
            <column caption='% DE LUCRO' datatype='real' default-format='p0.00%' name='[Calculation_16325579727695872]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Lucro]) / SUM([Vendas])' />
            </column>
            <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Lucro]' role='measure' type='quantitative' />
            <column datatype='string' name='[País]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' default-format='c&quot;R$ &quot;#,##0.00;-&quot;R$ &quot;#,##0.00' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[País]' derivation='None' name='[none:País:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lucro]' derivation='Sum' name='[sum:Lucro:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_16325579727695872]' derivation='User' name='[usr:Calculation_16325579727695872:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]'>
            <groupfilter function='member' level='[none:País:nk]' member='&quot;Brasil&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</column>
            <column>[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]' value='c&quot;R$ &quot;#,##0;-&quot;R$ &quot;#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' max='0.5' min='-0.5' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' />
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:Estado:nk]' />
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]' />
              <text column='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' />
              <lod column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]' />
              <lod column='[federated.1v2mpba132weha1buopl81yo8vw8].[none:Estado:nk]' />
              <lod column='[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]' />
              <geometry column='[federated.1v2mpba132weha1buopl81yo8vw8].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' underline='true'><![CDATA[<[federated.1v2mpba132weha1buopl81yo8vw8].[none:Estado:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666'>VENDAS:</run>
                <run bold='true' fontcolor='#000000'><![CDATA[ <[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Vendas:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666'>LUCRO: </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1v2mpba132weha1buopl81yo8vw8].[sum:Lucro:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666'>% DE LUCRO:</run>
                <run bold='true' fontcolor='#000000'><![CDATA[ <[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#666666' underline='true'>TOP CIDADES POR VENDAS</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<Sheet name="VENDAS POR CIDADE" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v2mpba132weha1buopl81yo8vw8].[Latitude (generated)]</rows>
        <cols>[federated.1v2mpba132weha1buopl81yo8vw8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{908D899E-1C2E-4CF2-8B1E-782A88A421C8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='VENDAS E LUCRO POR REGIÃO E ESTADO'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Exemplo-Superloja' name='federated.1v2mpba132weha1buopl81yo8vw8' />
      </datasources>
      <datasource-dependencies datasource='federated.1v2mpba132weha1buopl81yo8vw8'>
        <column datatype='date' name='[Data da compra]' role='dimension' type='ordinal' />
        <column-instance column='[Data da compra]' derivation='Year' name='[yr:Data da compra:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98306' id='15' param='horz' type-v2='layout-flow' w='98914' x='543' y='847'>
            <zone h='98306' id='13' type-v2='layout-basic' w='98914' x='543' y='847'>
              <zone h='83369' id='7' param='horz' type-v2='layout-flow' w='85415' x='14042' y='15784'>
                <zone h='83369' id='5' type-v2='layout-basic' w='85415' x='14042' y='15784'>
                  <zone h='83369' id='3' name='VENDAS POR ESTADO' show-title='false' w='85415' x='14042' y='15784'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='5509' id='10' name='RESUMO' show-title='false' w='98914' x='543' y='10275'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='83369' id='11' name='RESUMO REGIÕES BRASILEIRAS' show-title='false' w='13499' x='543' y='15784'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='9428' id='12' type-v2='text' w='98914' x='543' y='847'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#000000' fontsize='16'>VENDAS E LUCRO POR REGIÃO E ESTADO</run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run fontalignment='1' fontcolor='#555555' fontsize='10'>LEVE O MOUSE SOBRE OS ESTADOS PARA DETALHAR AS INFORMAÇÕES POR CIDADE</run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5932' id='9' name='VENDAS POR ESTADO' pane-specification-id='0' param='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' type-v2='color' w='15400' x='82090' y='27119' />
        <zone h='4661' id='16' mode='dropdown' name='VENDAS POR ESTADO' param='[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]' type-v2='filter' values='database' w='10855' x='87178' y='1589' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98306' id='23' param='vert' type-v2='layout-flow' w='98914' x='543' y='847'>
                <zone forceUpdate='true' h='9428' id='12' type-v2='text' w='98914' x='543' y='847'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='16'>VENDAS E LUCRO POR REGIÃO E ESTADO</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontcolor='#555555' fontsize='10'>LEVE O MOUSE SOBRE OS ESTADOS PARA DETALHAR AS INFORMAÇÕES POR CIDADE</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='36' h='5509' id='10' is-fixed='true' name='RESUMO' show-title='false' w='98914' x='543' y='10275'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83369' id='11' is-fixed='true' name='RESUMO REGIÕES BRASILEIRAS' show-title='false' w='13499' x='543' y='15784'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4661' id='16' mode='dropdown' name='VENDAS POR ESTADO' param='[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]' type-v2='filter' values='database' w='10855' x='87178' y='1589'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83369' id='3' is-fixed='true' name='VENDAS POR ESTADO' show-title='false' w='85415' x='14042' y='15784'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5932' id='9' name='VENDAS POR ESTADO' pane-specification-id='0' param='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' type-v2='color' w='15400' x='82090' y='27119'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7BE75B67-0062-4571-9C86-7E45055B9E2D}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='VENDAS POR CIDADE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='dropdown' param='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B22B419-0F7F-4EDB-BDE1-2D0D269ACE9F}' />
    </window>
    <window class='worksheet' name='VENDAS POR ESTADO'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card mode='dropdown' param='[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:Estado:nk]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[usr:Calculation_16325579727695872:qk]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[yr:Data da compra:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{589A4908-A366-4345-AEA7-D5E60AE6C96B}' />
    </window>
    <window class='worksheet' name='Planilha 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:Estado:nk]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5A80341-476D-46F0-8487-E53B09662B0B}' />
    </window>
    <window class='worksheet' name='RESUMO'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[:Measure Names]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:Calculation_512284488710549507:qk]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67BD3A0A-773D-4ED9-A18B-57A10B16FBDC}' />
    </window>
    <window class='worksheet' name='RESUMO REGIÕES BRASILEIRAS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:País:nk]</field>
            <field>[federated.1v2mpba132weha1buopl81yo8vw8].[none:Região Brasileira:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A69BEE18-B6D3-4EE3-9BA9-1FEC323A91D0}' />
    </window>
    <window class='dashboard' maximized='true' name='VENDAS E LUCRO POR REGIÃO E ESTADO'>
      <viewpoints>
        <viewpoint name='RESUMO'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='RESUMO REGIÕES BRASILEIRAS'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='VENDAS POR ESTADO'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{A4F6F10C-4B63-4F5F-ABC1-1EBE6DA8C2EA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Planilha 3' width='192'>
      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
      5OTgcDjwer1sbm5SUlKCVqvF5/NRU1PDpUuXXogQJpfLeeutt4hGo/zd3/0dZrOZ7e1tqW+x
      wWBga2sLrVZLdnY23d3dlJSUMD8/z9zcHCqVCoPBQE9PD4lEgtbW1qce88yZM+j1eubm5vD7
      /QwNDbFr1y5kMhlWq1USsNra2ujs7MRsNuNyuSgvL+fOnTtkZWWxtbVFeno6f/zHf8zKyopU
      T7S0tITBYMDtdtPZ2YlarUan00ntUaemppDJZFRUVEhC2Icffgjs9Ah7rgiCwMjICM3Nzc+0
      THiVSEVGPq8H/vX1dWKxmLTMehQ7jrAdXmke6QhLRVDvsMOrwNeeAb5JytcOO3zXeexDsJCM
      EwyGQKEmTa997FotGY+RlClQKRXfSCT7fSLlUorH4+h0OilGUKVSSYJSqsTYYDAgCAKhUEgS
      vWKxGHq9XirTfZFCWDweJxKJoNfrUSqVxONxBEGQgqXC4TDxeFx6H6FQCJ1Oh1wuJxQKoVAo
      0Ol0zzxmURQJhULSuZDL5czPz5OVlUV29gN9KXUuDQaDtHOjVCofEudSYxYEgUgkgkajQaVS
      PTQmeLA7l+rGk3o9pVIpvb8nCGGDfHprmtw0BflHvs+BEuOj3g73x7pQFe+nMt/0bGf995B4
      PM7169eJx+NUVlbi9XolS+THH39MKBTiypUrKJVK6urqcDgcOJ1O6uvrsdlsuFwujh49ytra
      2jfuuv7vQRAEurq6JNX16NGjXLlyBY1Gw9mzZyU3ld/vJyMjA4VCgdvtlkK/hoeHcbvdvPfe
      e6Snpz/zMS9fvixNoqqqKrq6uiguLubNN98kkUhI7rmSkhLC4TButxuv18uPfvQjFAoF3d3d
      +P1+TCYTGRkZUkpdbW0ts7OzkhCW2nWanJwkLy+PoqIixscf+EzOnDkDPEUIq287Qmumm89t
      2yiW72LZiPPamye5338DmaaC8nI1k8tOiuQuKvNMvKq3AJVKxTvvvMPs7Cx6vZ7W1lZmZmYk
      6T4ej0stkObn50kkEpSWlpKdnc36+rokMmm1Wtxut2T9e97I5XJOnz7NysqK5P3NycmRngNl
      MhktLS1MTEyQkZGBw+EgJyeHlZUVjEYjFRUVyGSyb7zDVVpaSltbG9evX0cmk5GWliY1EUkk
      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
      /z8m70PGAzCIrAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='47' name='RESUMO' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RESUMO REGIÕES BRASILEIRAS' width='192'>
      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
      uEgAQmv/Bci621D3rjKUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='VENDAS E LUCRO POR REGIÃO E ESTADO' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VENDAS POR CIDADE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VENDAS POR ESTADO' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
